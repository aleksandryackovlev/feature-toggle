openapi: 3.0.0
info:
  title: Feature toggle client
  description: API for manging feature toggles
  version: 0.1.0
  contact: {}
tags:
  - name: Client features
    description: Methods for getting features' state
servers:
  - url: 'http://localhost:3000'
    description: development server
components:
  schemas:
    CrudErrorResponse:
      type: object
      properties:
        statusCode:
          type: number
          example: 400
          description: HTTP status code
        message:
          description: The list of error messages
          oneOf:
            - type: string
              example: value must not be empty
            - type: array
              items:
                type: string
          items:
            type: string
        error:
          type: string
          description: Error message
          example: Bad Request
      required:
        - statusCode
        - message
    ClientFeature:
      type: object
      properties:
        name:
          type: string
          description: The name of the feature
          x-faker: git.branch
        isEnabled:
          type: boolean
          description: Is feature enabled
      required:
        - name
        - isEnabled
    ClientFeaturesListResponse:
      type: object
      properties:
        total:
          type: number
          example: 10
          description: The total amount of entities
        data:
          description: The list of entitites
          type: array
          items:
            $ref: '#/components/schemas/ClientFeature'
      required:
        - total
        - data
    ClientFeatureSingleResponse:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/ClientFeature'
      required:
        - data
paths:
  /api/v1/features:
    get:
      operationId: getClientFeatures
      summary: Find all features
      parameters:
        - name: X-Application-ID
          required: true
          in: header
          example: 977a3934-ee5f-4a6f-beed-42a7529ce648
          schema:
            type: string
      responses:
        '200':
          description: The list of found features
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientFeaturesListResponse'
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CrudErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              example:
                statusCode: 404
                message: Entity does not exist
                error: Not Found
              schema:
                $ref: '#/components/schemas/CrudErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              example:
                statusCode: 500
                message: Internal server error
              schema:
                $ref: '#/components/schemas/CrudErrorResponse'
      tags:
        - Client features
  '/api/v1/features/{name}':
    get:
      operationId: getClientFeature
      summary: Get feature by name
      parameters:
        - name: name
          required: true
          in: path
          example: feature_dredd_2
          schema:
            type: string
        - name: X-Application-ID
          required: true
          in: header
          example: 977a3934-ee5f-4a6f-beed-42a7529ce648
          schema:
            type: string
      responses:
        '200':
          description: Feature
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientFeatureSingleResponse'
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CrudErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              example:
                statusCode: 404
                message: Entity does not exist
                error: Not Found
              schema:
                $ref: '#/components/schemas/CrudErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              example:
                statusCode: 500
                message: Internal server error
              schema:
                $ref: '#/components/schemas/CrudErrorResponse'
      tags:
        - Client features
